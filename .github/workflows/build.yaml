name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.11.0"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Cache frontend
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build frontend
        run: npm run build

      - name: Upload frontend as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend/out

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Generate a stub embedded frontend
        run: |
          mkdir -p frontend/out
          touch frontend/out/.gitignore
          go generate ./...

      - name: Build backend
        run: go build -o static-admin

      - name: Upload backend as artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-admin-api
          path: static-admin

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: josegonzalez/static-admin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  build-all:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: frontend/out

      - name: Verify the frontend artifact
        run: |
          test -d frontend/out
          test -d frontend/out/_next
          test -f frontend/out/index.html

      - name: Generate the embedded frontend
        run: go generate ./...

      - name: Build binary
        run: go build -o static-admin

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-admin
          path: static-admin

  release:
    runs-on: ubuntu-latest
    needs: [build-all]
    steps:
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: static-admin
          path: static-admin

      # create a github release and upload the binary
      # https://docs.github.com/en/actions/creating-workflows/creating-an-advanced-workflow/creating-a-release-workflow
      - name: Create a release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        with:
          files: |
            static-admin
          generate_release_notes: true
          make_latest: true
